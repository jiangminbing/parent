<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.soft.manager.dao.GoodsMapper">
  <resultMap id="BaseResultMap" type="com.soft.parent.manager.po.Goods">
    <id column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="del_state" jdbcType="TINYINT" property="delState" />
    <result column="simple_describe" jdbcType="VARCHAR" property="simpleDescribe" />
    <result column="is_marketable" jdbcType="TINYINT" property="isMarketable" />
    <result column="recommend" jdbcType="TINYINT" property="recommend" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="admin_id" jdbcType="INTEGER" property="adminId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.soft.manager.po.Goods">
    <result column="detail_describe" jdbcType="LONGVARCHAR" property="detailDescribe" />
  </resultMap>

  <sql id="Base_Column_List">
    goods_id, category_id, goods_name, nickname, image, del_state, simple_describe, is_marketable, 
    recommend, create_time, update_time, admin_id
  </sql>
  <sql id="Blob_Column_List">
    detail_describe
  </sql>
  <select id="selectGoodsByGoodsCategory" parameterType="java.util.Map"
          resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_goods
    where del_state=1 and is_marketable=1
    <if test="recommend != null">
      and recommend = #{recommend,jdbcType=TINYINT}
    </if>
    and (category_id=#{categoryId,jdbcType=TINYINT} or category_id
    in ( select category_id from t_goods_category where category_id=#{categoryId,jdbcType=TINYINT} or parent_id=#{categoryId,jdbcType=TINYINT}))
    order by
    update_time desc
    <if test="begin != null and length != null">
      limit #{begin} , #{length}
    </if>
  </select>
  <select id="selectGoodsByGoodsCategory" parameterType="java.util.Map"
          resultType="java.lang.Long">
    select
      count(*)
    from t_goods
    where del_state=1 and is_marketable=1
    <if test="recommend != null">
      and recommend = #{recommend,jdbcType=TINYINT}
    </if>
    and (category_id=#{categoryId,jdbcType=TINYINT} or category_id
    in ( select category_id from t_goods_category where category_id=#{categoryId,jdbcType=TINYINT} or parent_id=#{categoryId,jdbcType=TINYINT}))
  </select>
  <select id="selectByMyStoreGoods" parameterType="java.util.Map"
          resultMap="BaseResultMap">
    select
    a.goods_id goods_id, a.category_id category_id,a.nickname nickname,a.goods_name goods_name,
    a.image image, a.simple_describe simple_describe,a.is_marketable is_marketable,
    a.detail_describe detail_describe, a.recommend recommend,
    a.del_state del_state, a.create_time create_time,a.update_time update_time, a.admin_id admin_id
    from t_store_goods as b join t_goods as a
    on a.goods_id=b.goods_id
    where del_state=1 and is_marketable=1
    and b.user_id= #{userId,jdbcType=INTEGER}
    order by
    b.update_time desc
    <if test="begin != null and length != null">
      limit #{begin} , #{length}
    </if>
  </select>
  <select id="selectCountByMyStoreGoods" parameterType="java.lang.Integer" resultType="java.lang.Long">
    select
    count(*)
    from t_store_goods as b join t_goods as a
    on a.goods_id=b.goods_id
    where del_state=1 and is_marketable=1
    and b.user_id= #{userId,jdbcType=INTEGER}
  </select>

</mapper>