<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.soft.parent.manager.dao.ReceiveMapper">
  <resultMap id="BaseResultMap" type="com.soft.parent.manager.po.Receive">
    <id column="receive_id" jdbcType="INTEGER" property="receiveId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="contact" jdbcType="VARCHAR" property="contact" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="receive_province" jdbcType="VARCHAR" property="receiveProvince" />
    <result column="receive_city" jdbcType="VARCHAR" property="receiveCity" />
    <result column="receive_county" jdbcType="VARCHAR" property="receiveCounty" />
    <result column="receive_address" jdbcType="VARCHAR" property="receiveAddress" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="isDefault" jdbcType="TINYINT" property="isdefault" />
    <result column="del_state" jdbcType="TINYINT" property="delState" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    receive_id, user_id, contact, tel, receive_province, receive_city, receive_county, 
    receive_address, create_time, update_time, isDefault, del_state
  </sql>
  <select id="selectByExample" parameterType="com.soft.parent.manager.po.ReceiveExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_user_receive
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="begin != null and length != null">
      limit #{begin} , #{length}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_user_receive
    where receive_id = #{receiveId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_user_receive
    where receive_id = #{receiveId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.soft.parent.manager.po.ReceiveExample">
    delete from t_user_receive
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.soft.parent.manager.po.Receive">
    insert into t_user_receive (receive_id, user_id, contact, 
      tel, receive_province, receive_city, 
      receive_county, receive_address, create_time, 
      update_time, isDefault, del_state
      )
    values (#{receiveId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{contact,jdbcType=VARCHAR}, 
      #{tel,jdbcType=VARCHAR}, #{receiveProvince,jdbcType=VARCHAR}, #{receiveCity,jdbcType=VARCHAR}, 
      #{receiveCounty,jdbcType=VARCHAR}, #{receiveAddress,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{isdefault,jdbcType=TINYINT}, #{delState,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.soft.parent.manager.po.Receive">
    insert into t_user_receive
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="receiveId != null">
        receive_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="contact != null">
        contact,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="receiveProvince != null">
        receive_province,
      </if>
      <if test="receiveCity != null">
        receive_city,
      </if>
      <if test="receiveCounty != null">
        receive_county,
      </if>
      <if test="receiveAddress != null">
        receive_address,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isdefault != null">
        isDefault,
      </if>
      <if test="delState != null">
        del_state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="receiveId != null">
        #{receiveId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="contact != null">
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="receiveProvince != null">
        #{receiveProvince,jdbcType=VARCHAR},
      </if>
      <if test="receiveCity != null">
        #{receiveCity,jdbcType=VARCHAR},
      </if>
      <if test="receiveCounty != null">
        #{receiveCounty,jdbcType=VARCHAR},
      </if>
      <if test="receiveAddress != null">
        #{receiveAddress,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isdefault != null">
        #{isdefault,jdbcType=TINYINT},
      </if>
      <if test="delState != null">
        #{delState,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.soft.parent.manager.po.ReceiveExample" resultType="java.lang.Long">
    select count(*) from t_user_receive
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_user_receive
    <set>
      <if test="record.receiveId != null">
        receive_id = #{record.receiveId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.contact != null">
        contact = #{record.contact,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null">
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveProvince != null">
        receive_province = #{record.receiveProvince,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveCity != null">
        receive_city = #{record.receiveCity,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveCounty != null">
        receive_county = #{record.receiveCounty,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveAddress != null">
        receive_address = #{record.receiveAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isdefault != null">
        isDefault = #{record.isdefault,jdbcType=TINYINT},
      </if>
      <if test="record.delState != null">
        del_state = #{record.delState,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_user_receive
    set receive_id = #{record.receiveId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      contact = #{record.contact,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR},
      receive_province = #{record.receiveProvince,jdbcType=VARCHAR},
      receive_city = #{record.receiveCity,jdbcType=VARCHAR},
      receive_county = #{record.receiveCounty,jdbcType=VARCHAR},
      receive_address = #{record.receiveAddress,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      isDefault = #{record.isdefault,jdbcType=TINYINT},
      del_state = #{record.delState,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.soft.parent.manager.po.Receive">
    update t_user_receive
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="contact != null">
        contact = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="receiveProvince != null">
        receive_province = #{receiveProvince,jdbcType=VARCHAR},
      </if>
      <if test="receiveCity != null">
        receive_city = #{receiveCity,jdbcType=VARCHAR},
      </if>
      <if test="receiveCounty != null">
        receive_county = #{receiveCounty,jdbcType=VARCHAR},
      </if>
      <if test="receiveAddress != null">
        receive_address = #{receiveAddress,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isdefault != null">
        isDefault = #{isdefault,jdbcType=TINYINT},
      </if>
      <if test="delState != null">
        del_state = #{delState,jdbcType=TINYINT},
      </if>
    </set>
    where receive_id = #{receiveId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.soft.parent.manager.po.Receive">
    update t_user_receive
    set user_id = #{userId,jdbcType=INTEGER},
      contact = #{contact,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      receive_province = #{receiveProvince,jdbcType=VARCHAR},
      receive_city = #{receiveCity,jdbcType=VARCHAR},
      receive_county = #{receiveCounty,jdbcType=VARCHAR},
      receive_address = #{receiveAddress,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      isDefault = #{isdefault,jdbcType=TINYINT},
      del_state = #{delState,jdbcType=TINYINT}
    where receive_id = #{receiveId,jdbcType=INTEGER}
  </update>
</mapper>